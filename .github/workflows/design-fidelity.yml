name: Design Fidelity

on:
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

env:
  FIDELITY_THRESHOLD: "0.95"   # fail PR if overall alignment < 95%

jobs:
  fidelity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: flutter pub get

      - name: Run design fidelity audit
        run: dart run tool/design_fidelity.dart --threshold $FIDELITY_THRESHOLD

      - name: Upload report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: DESIGN_FIDELITY_REPORT
          path: docs/DESIGN_FIDELITY_REPORT.md

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportPath = path.join(process.cwd(), 'docs/DESIGN_FIDELITY_REPORT.md');
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf8');
                
                // Extract alignment scores from report
                const screenMatch = report.match(/Screens:\s*(\d+)%/);
                const componentMatch = report.match(/Components:\s*(\d+)%/);
                const tokenMatch = report.match(/Design Tokens:\s*(\d+)%/);
                const flowMatch = report.match(/User Flows:\s*(\d+)%/);
                
                const screenScore = screenMatch ? parseInt(screenMatch[1]) : 0;
                const componentScore = componentMatch ? parseInt(componentMatch[1]) : 0;
                const tokenScore = tokenMatch ? parseInt(tokenMatch[1]) : 0;
                const flowScore = flowMatch ? parseInt(flowMatch[1]) : 0;
                
                const overallScore = (screenScore + componentScore + tokenScore + flowScore) / 4;
                const threshold = parseFloat(process.env.FIDELITY_THRESHOLD) * 100;
                
                const status = overallScore >= threshold ? '‚úÖ PASSED' : '‚ùå FAILED';
                const emoji = overallScore >= threshold ? 'üéâ' : '‚ö†Ô∏è';
                
                const comment = `## ${emoji} Design Fidelity Audit Results
                
**Overall Score:** ${overallScore.toFixed(1)}% (Threshold: ${threshold}%)
**Status:** ${status}

### Breakdown:
- **Screens:** ${screenScore}%
- **Components:** ${componentScore}%
- **Design Tokens:** ${tokenScore}%
- **User Flows:** ${flowScore}%

${overallScore >= threshold ? 
  'üéØ **All design fidelity checks passed!** The implementation maintains excellent alignment with the design system.' :
  '‚ö†Ô∏è **Design fidelity below threshold.** Please review the report and address missing components or screens.'
}

<details>
<summary>üìã View Full Report</summary>

\`\`\`markdown
${report.substring(0, 2000)}${report.length > 2000 ? '...' : ''}
\`\`\`
</details>

---
*Report generated by Design Fidelity CI*`;

                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.error('Error processing design fidelity report:', error);
            }

      - name: Fail if below threshold
        if: failure()
        run: |
          echo "‚ùå Design fidelity audit failed"
          echo "Please review the report and address the issues"
          exit 1
